// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using BankReportingDb.Models;
using Microsoft.EntityFrameworkCore;

namespace BankReportingDb.Context;

public partial class DB : DbContext
{
    public DB(DbContextOptions<DB> options)
        : base(options)
    {
    }

    public virtual DbSet<NCurrency> NCurrencies { get; set; }

    public virtual DbSet<NTransactionDirection> NTransactionDirections { get; set; }

    public virtual DbSet<RMerchant> RMerchants { get; set; }

    public virtual DbSet<RPartner> RPartners { get; set; }

    public virtual DbSet<RTransaction> RTransactions { get; set; }

    public virtual DbSet<RTransactionFile> RTransactionFiles { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<NCurrency>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__n_curren__3213E83F73613F38");

            entity.ToTable("n_currency");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Ccy)
                .IsRequired()
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("ccy");
        });

        modelBuilder.Entity<NTransactionDirection>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__n_transa__3213E83F9B22FBC9");

            entity.ToTable("n_transaction_direction");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Direction)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("direction");
        });

        modelBuilder.Entity<RMerchant>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__r_mercha__3213E83FD94E1891");

            entity.ToTable("r_merchant");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("id");
            entity.Property(e => e.Addres2)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("addres_2");
            entity.Property(e => e.Address1)
                .IsRequired()
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("address_1");
            entity.Property(e => e.BoardingDate)
                .HasColumnType("datetime")
                .HasColumnName("boarding_date");
            entity.Property(e => e.Country)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("country");
            entity.Property(e => e.IdPartner)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("id_partner");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("name");
            entity.Property(e => e.Url)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("url");

            entity.HasOne(d => d.IdPartnerNavigation).WithMany(p => p.RMerchants)
                .HasForeignKey(d => d.IdPartner)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__r_merchan__id_pa__3D5E1FD2");
        });

        modelBuilder.Entity<RPartner>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__r_partne__3213E83FC4A5D4F5");

            entity.ToTable("r_partner");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("id");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("name");
        });

        modelBuilder.Entity<RTransaction>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__r_transa__3213E83FA0640C1E");

            entity.ToTable("r_transaction");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("id");
            entity.Property(e => e.Amount)
                .HasColumnType("money")
                .HasColumnName("amount");
            entity.Property(e => e.BeneficiaryIban)
                .IsRequired()
                .HasMaxLength(22)
                .IsUnicode(false)
                .HasColumnName("beneficiary_iban");
            entity.Property(e => e.CreateDate)
                .HasColumnType("datetime")
                .HasColumnName("create_date");
            entity.Property(e => e.DebtorIban)
                .IsRequired()
                .HasMaxLength(22)
                .IsUnicode(false)
                .HasColumnName("debtor_iban");
            entity.Property(e => e.ExternalId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("external_id");
            entity.Property(e => e.IdCcy).HasColumnName("id_ccy");
            entity.Property(e => e.IdDirection).HasColumnName("id_direction");
            entity.Property(e => e.IdMerchant)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("id_merchant");
            entity.Property(e => e.IdTransactionFile)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("id_transaction_file");
            entity.Property(e => e.Status).HasColumnName("status");

            entity.HasOne(d => d.IdMerchantNavigation).WithMany(p => p.RTransactions)
                .HasForeignKey(d => d.IdMerchant)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__r_transac__id_me__4222D4EF");
        });

        modelBuilder.Entity<RTransactionFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__r_transa__3213E83F38E4B627");

            entity.ToTable("r_transaction_file");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("id");
            entity.Property(e => e.ContentType)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("content_type");
            entity.Property(e => e.Contents)
                .IsRequired()
                .HasColumnName("contents");
            entity.Property(e => e.DateCreated)
                .HasColumnType("datetime")
                .HasColumnName("date_created");
            entity.Property(e => e.FileDate)
                .HasColumnType("datetime")
                .HasColumnName("file_date");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("name");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}